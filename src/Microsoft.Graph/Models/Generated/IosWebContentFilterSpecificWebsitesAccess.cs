// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type IosWebContentFilterSpecificWebsitesAccess.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class IosWebContentFilterSpecificWebsitesAccess : IosWebContentFilterBase
    {
        public IosWebContentFilterSpecificWebsitesAccess()
        {
            this.ODataType = "microsoft.graph.iosWebContentFilterSpecificWebsitesAccess";
        }
        /// <summary>
        /// Gets or sets specificWebsitesOnly.
        /// URL bookmarks which will be installed into built-in browser and user is only allowed to access websites through bookmarks. This collection can contain a maximum of 500 elements.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "specificWebsitesOnly", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<IosBookmark> SpecificWebsitesOnly { get; set; }
    
        /// <summary>
        /// Gets or sets websiteList.
        /// URL bookmarks which will be installed into built-in browser and user is only allowed to access websites through bookmarks. This collection can contain a maximum of 500 elements.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "websiteList", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<IosBookmark> WebsiteList { get; set; }
    
    }
}
